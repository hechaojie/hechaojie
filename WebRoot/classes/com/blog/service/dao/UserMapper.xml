<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.service.dao.UserDao">
    
    <resultMap id="user" type="User">
    	<id property="id" column="id"/>
    	<result property="email" column="email"/>
    	<result property="username" column="username"/>
    	<result property="nickname" column="nickname"/>
    	<result property="sex" column="sex"/>
    	<result property="password" column="password"/>
    	<result property="createAt" column="create_at"/>
    	<result property="updateAt" column="update_at"/>
    </resultMap>
    
    <insert id="save" parameterType="User" useGeneratedKeys="false" keyProperty="id">
    	insert into user(id,email,username,nickname,sex,password,create_at,update_at)
    	values(#{id},#{email},#{username},#{nickname},#{sex},#{password},#{createAt},#{updateAt});
    </insert>
    
    <select id="findAll" resultMap="user">
            select * from user
    </select>
    
    <select id="findUsersByConditions" parameterType="Map" resultMap="user">
    	select * from user u where 1=1
    	<if test="sqlParams.email != null">
    		and u.email = #{sqlParams.email}
    	</if>
    	<if test="sqlParams.id != null">
    		and u.id = #{sqlParams.id}
    	</if>
    	order by id desc
    	limit #{start} , #{size}
    </select>
    
    <select id="totalUsersByConditions" parameterType="Map" resultType="Long">
    	select count(*) from user u where 1=1
    	<if test="email != null">
    		and u.email = #{email}
    	</if>
    	<if test="id != null">
    		and u.id = #{id}
    	</if>
    	order by id desc
    </select>
    
    <select id="findUserById" parameterType="String" resultMap="user">
    	select * from user u where u.id = #{id}
    </select>
    
    <select id="findUserByEmail" parameterType="String" resultMap="user">
    	select * from user u where u.email = #{email}
    </select>
    
    <update id="updateUserPasswd" parameterType="map">
    	update user set password = #{password} where id = #{userId}
    </update>
    
    
</mapper>